name: Metalift CI

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
        with:
           black_args: --check --diff .
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Dependencies
        run: pip install mypy
      - name: Run mypy
        run: mypy .
  build:
    runs-on: ubuntu-latest
    needs: [lint, mypy]
    strategy:
      matrix:
        synth_cvc5: ["0", "1"]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: "recursive"

    - uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixos-21.11

    - name: Cache Nix store
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/nix-cache
        key: nix-ci-shell-cache-${{ hashFiles('ci-shell.nix') }}

    - name: Load Nix cache
      if: steps.cache.outputs.cache-hit == 'true'
      run: |
        nix-store --import < ~/nix-cache/cache.nar
        rm -rf ~/nix-cache
    # https://github.com/Bogdanp/setup-racket-cache-example
    - name: Cache Racket dependencies
      id: cache-racket
      if: matrix.synth_cvc5 == '0'
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/racket
          ~/.local/share/racket
        key: ${{ runner.os }}-racket-8.4
    - name: Install Racket
      if: matrix.synth_cvc5 == '0'
      uses: Bogdanp/setup-racket@v1.7
      with:
        architecture: 'x64'
        distribution: 'full'
        variant: 'CS'
        version: '8.4'
    - name: Install Rosette
      if: matrix.synth_cvc5 == '0'
      run: |
        raco pkg install --auto --skip-installed rosette
        raco pkg update --auto rosette
    - name: Build LLVM Pass
      shell: nix-shell ci-shell.nix --run "bash -e {0}"
      run: |
        cd llvm-pass
        mkdir build
        cd build
        cmake ..
        make
        cd ..

    - name: Build llvmlite
      shell: nix-shell ci-shell.nix --run "bash -e {0}"
      run: |
        cd llvmlite
        python setup.py build
        cd ..

    - name: Build Test Inputs
      shell: nix-shell ci-shell.nix --run "bash -e {0}"
      run: |
        cd tests
        ./compile-all
        cd ..

    - name: Test Core Examples
      shell: nix-shell ci-shell.nix --run "bash -e {0}"
      run: |
        python -m tests.ite1
        python -m tests.ite3
        python -m tests.set1
        python -m tests.tuples1
        python -m tests.tuples2
        python -m tests.tuples3
        python -m tests.while3
        python -m tests.while4
      env:
        SYNTH_CVC5: ${{ matrix.synth_cvc5 }}

    - name: Test Rosette-only Examples
      if: matrix.synth_cvc5 == '0'
      shell: nix-shell ci-shell.nix --run "bash -e {0}"
      run: |
        python -m tests.fma_dsl
        python -m tests.count
        python -m tests.list1
        python -m tests.list1_fns
        python -m tests.uninterp
        python -m tests.struct1

    #- name: Test Actor Examples (direct)
    #  shell: nix-shell ci-shell.nix --run "bash -e {0}"
    #  run: |
    #    # TODO(shadaj): synth functions cannot refer to each other in CVC5
    #    # python -m tests.actor1_g_set_fixed_structure synth
    #    # TODO(shadaj): flaky on CI for some reason
    #    # python -m tests.actor1_2p_set_fixed_structure synth
    #    python -m tests.actor2 synth tests/actor2.ll test tests/actor2.loops cvc5
    #  if: matrix.synth_cvc5 == '1'
    #  env:
    #    SYNTH_CVC5: ${{ matrix.synth_cvc5 }}
    
    - name: Test Actor Examples (op-list)
      shell: nix-shell ci-shell.nix --run "bash -e {0}"
      run: |
        python -m tests.actor1_g_set_fixed_structure synth-oplist
        python -m tests.actor1_2p_set_fixed_structure synth-oplist
        python -m tests.actor_flag_ew_fixed_structure synth-oplist
        python -m tests.actor_flag_dw_fixed_structure synth-oplist
        python -m tests.actor2 synth-oplist tests/actor2.ll test tests/actor2.loops cvc5
      if: matrix.synth_cvc5 == '0'
      env:
        SYNTH_CVC5: ${{ matrix.synth_cvc5 }}

    - name: Save Nix cache
      run: ./ci-util/cache-nix.sh
