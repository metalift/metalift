Found benchmark color_burn_8 in suite blend
#include <vector>
using namespace std;

vector<vector<int>> color_burn_8(vector<vector<int>> base, vector<vector<int>> active)
{
    vector<vector<int>> out;
    int m = base.size();
    int n = base[0].size();
	for (int row = 0; row < m; row++) {
        vector<int> row_vec;
		for (int col = 0; col < n; col++) {
            int pixel;
            if (active[row][col] == 0)
                pixel = 32;
            else
                pixel = 32 - (32 - base[row][col]) / active[row][col];
            row_vec.push_back(pixel);
		}
		out.push_back(row_vec);
	}
	return out;
}

Analyzing benchmark color_burn_8
yoyo
name: for.cond<header><exiting>
name: for.body
name: for.cond4
name: for.end
name: invoke.cont21
name: for.inc22<latch>
name: for.body6
name: if.else
name: if.then
name: if.end
name: invoke.cont
name: for.inc
name: for.cond4<header><exiting>
name: for.body6
name: if.else
name: if.then
name: if.end
name: invoke.cont
name: for.inc<latch>
found loop: header: for.cond, body: ['for.body', 'for.cond4', 'for.end', 'invoke.cont21', 'for.body6', 'if.else', 'if.then', 'if.end', 'invoke.cont', 'for.inc'], exits: ['for.cond'], latches: ['for.inc22']
found loop: header: for.cond4, body: ['for.body6', 'if.else', 'if.then', 'if.end', 'invoke.cont'], exits: ['for.cond4'], latches: ['for.inc']
  %result.ptr = alloca i8*, align 8
  %nrvo = alloca i1, align 1
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %row = alloca i32, align 4
  %row_vec = alloca %"class.std::__1::vector.0", align 8
  %col = alloca i32, align 4
  %pixel = alloca i32, align 4
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %i = bitcast %"class.std::__1::vector"* %agg.result to i8*
  store i8* %i, i8** %result.ptr, align 8
  store i1 false, i1* %nrvo, align 1
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC1Ev(%"class.std::__1::vector"* %agg.result) #11
  %call = call i64 @_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv(%"class.std::__1::vector"* %base) #11
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %m, align 4
  %call1 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 0) #11
  %call2 = call i64 @_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv(%"class.std::__1::vector.0"* %call1) #11
  %conv3 = trunc i64 %call2 to i32
  store i32 %conv3, i32* %n, align 4
  store i32 0, i32* %row, align 4
  br label %for.cond
  %i1 = load i32, i32* %row, align 4
  %i2 = load i32, i32* %m, align 4
  %cmp = icmp slt i32 %i1, %i2
  br i1 %cmp, label %for.body, label %for.end24
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEEC1Ev(%"class.std::__1::vector.0"* %row_vec) #11
  store i32 0, i32* %col, align 4
  br label %for.cond4
  %i3 = load i32, i32* %col, align 4
  %i4 = load i32, i32* %n, align 4
  %cmp5 = icmp slt i32 %i3, %i4
  br i1 %cmp5, label %for.body6, label %for.end
  %i5 = load i32, i32* %row, align 4
  %conv7 = sext i32 %i5 to i64
  %call8 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %active, i64 %conv7) #11
  %i6 = load i32, i32* %col, align 4
  %conv9 = sext i32 %i6 to i64
  %call10 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call8, i64 %conv9) #11
  %i7 = load i32, i32* %call10, align 4
  %cmp11 = icmp eq i32 %i7, 0
  br i1 %cmp11, label %if.then, label %if.else
  store i32 32, i32* %pixel, align 4
  br label %if.end
  %i8 = load i32, i32* %row, align 4
  %conv12 = sext i32 %i8 to i64
  %call13 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 %conv12) #11
  %i9 = load i32, i32* %col, align 4
  %conv14 = sext i32 %i9 to i64
  %call15 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call13, i64 %conv14) #11
  %i10 = load i32, i32* %call15, align 4
  %sub = sub nsw i32 32, %i10
  %i11 = load i32, i32* %row, align 4
  %conv16 = sext i32 %i11 to i64
  %call17 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %active, i64 %conv16) #11
  %i12 = load i32, i32* %col, align 4
  %conv18 = sext i32 %i12 to i64
  %call19 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call17, i64 %conv18) #11
  %i13 = load i32, i32* %call19, align 4
  %div = sdiv i32 %sub, %i13
  %sub20 = sub nsw i32 32, %div
  store i32 %sub20, i32* %pixel, align 4
  br label %if.end
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE9push_backERKi(%"class.std::__1::vector.0"* %row_vec, i32* nonnull align 4 dereferenceable(4) %pixel)
  br label %invoke.cont
  br label %for.inc
  %i14 = load i32, i32* %col, align 4
  %inc = add nsw i32 %i14, 1
  store i32 %inc, i32* %col, align 4
  br label %for.cond4
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE9push_backERKS3_(%"class.std::__1::vector"* %agg.result, %"class.std::__1::vector.0"* nonnull align 8 dereferenceable(24) %row_vec)
  br label %invoke.cont21
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev(%"class.std::__1::vector.0"* %row_vec) #11
  br label %for.inc22
  %i15 = load i32, i32* %row, align 4
  %inc23 = add nsw i32 %i15, 1
  store i32 %inc23, i32* %row, align 4
  br label %for.cond
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEED1Ev(%"class.std::__1::vector"* %agg.result) #11
  br label %nrvo.skipdtor
  ret void
ps: (Implies:Bool (Or:Bool (And:Bool (And:Bool (And:Bool (And:Bool (Not:Bool (Lt:Bool row (matrix_length:Int base))) (Gt:Bool (matrix_length:Int base) (Lit:Int 1))) (Eq:Bool (matrix_length:Int base) (matrix_length:Int active))) (Eq:Bool (list_length:Int (matrix_get:List Int base (Lit:Int 0))) (list_length:Int (matrix_get:List Int active (Lit:Int 0))))) (color_burn_8_inv0:Bool active base agg.result row)) (And:Bool (And:Bool (And:Bool (And:Bool (And:Bool (Not:Bool (Lit:Bool True)) (Not:Bool (Lt:Bool row (matrix_length:Int base)))) (Gt:Bool (matrix_length:Int base) (Lit:Int 1))) (Eq:Bool (matrix_length:Int base) (matrix_length:Int active))) (Eq:Bool (list_length:Int (matrix_get:List Int base (Lit:Int 0))) (list_length:Int (matrix_get:List Int active (Lit:Int 0))))) (color_burn_8_inv0:Bool active base agg.result row))) (color_burn_8_ps:Bool active base agg.result))
Analyze took 0.8540709018707275s
ps call took 8.435703754425049s
------0th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    scalar_matrix_sub(32, base),
                    lambda x, y: 1 if x == 0 else y
                )
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 9.289774656295776
Passing through parser
Passed parser!
Parser took 5.23016881942749s
Total time taken: 14.519943475723267s
ps call took 5.739474058151245s
------1th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 20.25941753387451
Passing through parser
Passed parser!
Parser took 0.8687877655029297s
Total time taken: 21.12820529937744s
ps call took 4.508306980133057s
------2th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 25.636512279510498
Skipping 2th PS solution because it was already seen
ps call took 4.38660192489624s
------3th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 30.02311420440674
Skipping 3th PS solution because it was already seen
ps call took 4.443363904953003s
------4th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 34.46647810935974
Skipping 4th PS solution because it was already seen
ps call took 5.502074241638184s
------5th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 39.968552350997925
Skipping 5th PS solution because it was already seen
ps call took 6.36392617225647s
------6th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 46.332478523254395
Skipping 6th PS solution because it was already seen
ps call took 4.851032018661499s
------7th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 51.183510541915894
Skipping 7th PS solution because it was already seen
ps call took 7.335766792297363s
------8th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 58.51927733421326
Skipping 8th PS solution because it was already seen
ps call took 4.429826021194458s
------9th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 62.949103355407715
Skipping 9th PS solution because it was already seen
ps call took 4.494236946105957s
------10th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 67.44334030151367
Skipping 10th PS solution because it was already seen
ps call took 4.413944721221924s
------11th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 71.8572850227356
Skipping 11th PS solution because it was already seen
ps call took 4.301196098327637s
------12th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 76.15848112106323
Skipping 12th PS solution because it was already seen
ps call took 4.818672180175781s
------13th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 80.97715330123901
Skipping 13th PS solution because it was already seen
ps call took 3.9148402214050293s
------14th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 84.89199352264404
Skipping 14th PS solution because it was already seen
ps call took 4.055659055709839s
------15th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 88.94765257835388
Skipping 15th PS solution because it was already seen
ps call took 5.908090114593506s
------16th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 94.85574269294739
Skipping 16th PS solution because it was already seen
ps call took 6.586236953735352s
------17th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 101.44197964668274
Skipping 17th PS solution because it was already seen
ps call took 5.422332048416138s
------18th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 106.86431169509888
Skipping 18th PS solution because it was already seen
ps call took 4.0952980518341064s
------19th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 110.95960974693298
Skipping 19th PS solution because it was already seen
ps call took 6.182084798812866s
------20th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 117.14169454574585
Skipping 20th PS solution because it was already seen
ps call took 4.1610541343688965s
------21th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 121.30274868011475
Skipping 21th PS solution because it was already seen
ps call took 4.0895678997039795s
------22th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 125.39231657981873
Skipping 22th PS solution because it was already seen
ps call took 4.894388914108276s
------23th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 130.286705493927
Skipping 23th PS solution because it was already seen
ps call took 5.750277996063232s
------24th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 136.03698348999023
Skipping 24th PS solution because it was already seen
ps call took 3.890314817428589s
------25th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 139.92729830741882
Skipping 25th PS solution because it was already seen
ps call took 4.215120077133179s
------26th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 144.142418384552
Skipping 26th PS solution because it was already seen
ps call took 4.382985830307007s
------27th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 148.525404214859
Skipping 27th PS solution because it was already seen
ps call took 3.9911727905273438s
------28th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32 if x == 0 else y
    )


Total time to date 152.51657700538635
Skipping 28th PS solution because it was already seen
ps call took 6.627220869064331s
------29th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(active, active, lambda x, y: 1 if x == 0 else x)
            )
        ),
        lambda x, y: 32
    )


Total time to date 159.14379787445068
Passing through parser
Passed parser!
Parser took 1.3296449184417725s
Total time taken: 160.47344279289246s
ps call took 6.06741189956665s
------30th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(
                    active,
                    active,
                    lambda x, y: ite(x == 0, 1, x)
                )
            )
        ),
        lambda x, y: ite(x == 0, 32, y)
    )


Total time to date 166.5408546924591
Passing through parser
Passed parser!
Parser took 1.0253849029541016s
Total time taken: 167.5662395954132s
ps call took 5.116952180862427s
------31th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(
                    active,
                    active,
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 172.68319177627563
Passing through parser
Passed parser!
Parser took 0.8609418869018555s
Total time taken: 173.5441336631775s
ps call took 4.771953821182251s
------32th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            matrix_elemwise_div(
                matrix_scalar_sub(32, base),
                matrix_where(
                    active,
                    active,
                    lambda x, y: 1 if x == 0 else x
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 178.31608748435974
Passing through parser
Passed parser!
Parser took 0.9093441963195801s
Total time taken: 179.22543168067932s
ps call took 5.235808849334717s
------33th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 184.46124053001404
Passing through parser
Passed parser!
Parser took 0.9027800559997559s
Total time taken: 185.3640205860138s
ps call took 5.543952941894531s
------34th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 190.90797352790833
Skipping 34th PS solution because it was already seen
ps call took 5.7335240840911865s
------35th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 196.6414976119995
Skipping 35th PS solution because it was already seen
ps call took 7.370312929153442s
------36th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 204.01181054115295
Skipping 36th PS solution because it was already seen
ps call took 5.548894882202148s
------37th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 209.5607054233551
Skipping 37th PS solution because it was already seen
ps call took 6.740883111953735s
------38th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 216.30158853530884
Skipping 38th PS solution because it was already seen
ps call took 5.014482021331787s
------39th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 221.31607055664062
Skipping 39th PS solution because it was already seen
ps call took 5.999241828918457s
------40th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 227.31531238555908
Skipping 40th PS solution because it was already seen
ps call took 5.1502320766448975s
------41th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 232.46554446220398
Skipping 41th PS solution because it was already seen
ps call took 5.678606748580933s
------42th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 238.1441512107849
Skipping 42th PS solution because it was already seen
ps call took 5.706683874130249s
------43th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 243.85083508491516
Skipping 43th PS solution because it was already seen
ps call took 5.652225971221924s
------44th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 249.50306105613708
Skipping 44th PS solution because it was already seen
ps call took 5.487273931503296s
------45th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 254.99033498764038
Skipping 45th PS solution because it was already seen
ps call took 5.458532094955444s
------46th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 260.4488670825958
Skipping 46th PS solution because it was already seen
ps call took 5.917251110076904s
------47th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 266.36611819267273
Skipping 47th PS solution because it was already seen
ps call took 5.73530387878418s
------48th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 272.1014220714569
Skipping 48th PS solution because it was already seen
ps call took 5.861231088638306s
------49th PS solution---------

def color_burn_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        active,
        matrix_scalar_sub(
            32,
            scalar_matrix_div(
                32,
                matrix_where(
                    active,
                    matrix_scalar_sub(32, base),
                    lambda x, y: 1
                )
            )
        ),
        lambda x, y: 32
    )


Total time to date 277.9626531600952
Skipping 49th PS solution because it was already seen
