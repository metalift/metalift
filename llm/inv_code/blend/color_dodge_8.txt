#include <vector>
using namespace std;

vector<vector<int>> color_dodge_8(vector<vector<int>> base, vector<vector<int>> active)
{
    vector<vector<int>> out;
    int m = base.size();
    int n = base[0].size();
	for (int row = 0; row < m; row++) {
        vector<int> row_vec;
		for (int col = 0; col < n; col++) {
			int pixel;
            if (active[row][col] == 32)
                pixel = 32;
            else
                pixel = base[row][col] / (32 - active[row][col]);
			row_vec.push_back(pixel);
		}
		out.push_back(row_vec);
	}
	assert out == matrix_selection_two_args(base, active, lambda b, a: 32 if a == 32 else (b / (32 - a)));
}
