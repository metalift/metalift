Found benchmark overlay_blend_8 in suite blend
#include <vector>
using namespace std;

vector<vector<int>> overlay_blend_8(vector<vector<int>> base, vector<vector<int>> active)
{
    vector<vector<int>> out;
    int m = base.size();
    int n = base[0].size();
	for (int row = 0; row < m; row++) {
        vector<int> row_vec;
		for (int col = 0; col < n; col++) {
			int pixel;
			if (base[row][col] >= 16)
                pixel = 2 * base[row][col] + base[row][col] - 2 * base[row][col] * base[row][col] / 32 - 32;
			else
                pixel = 2 * base[row][col] * base[row][col] / 32;
			row_vec.push_back(pixel);
		}
		out.push_back(row_vec);
	}
	return out;
}

Analyzing benchmark overlay_blend_8
yoyo
name: for.cond<header><exiting>
name: for.body
name: for.cond4
name: for.end
name: invoke.cont42
name: for.inc43<latch>
name: for.body6
name: if.else
name: if.then
name: if.end
name: invoke.cont
name: for.inc
name: for.cond4<header><exiting>
name: for.body6
name: if.else
name: if.then
name: if.end
name: invoke.cont
name: for.inc<latch>
found loop: header: for.cond, body: ['for.body', 'for.cond4', 'for.end', 'invoke.cont42', 'for.body6', 'if.else', 'if.then', 'if.end', 'invoke.cont', 'for.inc'], exits: ['for.cond'], latches: ['for.inc43']
found loop: header: for.cond4, body: ['for.body6', 'if.else', 'if.then', 'if.end', 'invoke.cont'], exits: ['for.cond4'], latches: ['for.inc']
  %result.ptr = alloca i8*, align 8
  %nrvo = alloca i1, align 1
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %row = alloca i32, align 4
  %row_vec = alloca %"class.std::__1::vector.0", align 8
  %col = alloca i32, align 4
  %pixel = alloca i32, align 4
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %i = bitcast %"class.std::__1::vector"* %agg.result to i8*
  store i8* %i, i8** %result.ptr, align 8
  store i1 false, i1* %nrvo, align 1
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC1Ev(%"class.std::__1::vector"* %agg.result) #11
  %call = call i64 @_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv(%"class.std::__1::vector"* %base) #11
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %m, align 4
  %call1 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 0) #11
  %call2 = call i64 @_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv(%"class.std::__1::vector.0"* %call1) #11
  %conv3 = trunc i64 %call2 to i32
  store i32 %conv3, i32* %n, align 4
  store i32 0, i32* %row, align 4
  br label %for.cond
  %i1 = load i32, i32* %row, align 4
  %i2 = load i32, i32* %m, align 4
  %cmp = icmp slt i32 %i1, %i2
  br i1 %cmp, label %for.body, label %for.end45
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEEC1Ev(%"class.std::__1::vector.0"* %row_vec) #11
  store i32 0, i32* %col, align 4
  br label %for.cond4
  %i3 = load i32, i32* %col, align 4
  %i4 = load i32, i32* %n, align 4
  %cmp5 = icmp slt i32 %i3, %i4
  br i1 %cmp5, label %for.body6, label %for.end
  %i5 = load i32, i32* %row, align 4
  %conv7 = sext i32 %i5 to i64
  %call8 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 %conv7) #11
  %i6 = load i32, i32* %col, align 4
  %conv9 = sext i32 %i6 to i64
  %call10 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call8, i64 %conv9) #11
  %i7 = load i32, i32* %call10, align 4
  %cmp11 = icmp sge i32 %i7, 16
  br i1 %cmp11, label %if.then, label %if.else
  %i8 = load i32, i32* %row, align 4
  %conv12 = sext i32 %i8 to i64
  %call13 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 %conv12) #11
  %i9 = load i32, i32* %col, align 4
  %conv14 = sext i32 %i9 to i64
  %call15 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call13, i64 %conv14) #11
  %i10 = load i32, i32* %call15, align 4
  %mul = mul nsw i32 2, %i10
  %i11 = load i32, i32* %row, align 4
  %conv16 = sext i32 %i11 to i64
  %call17 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 %conv16) #11
  %i12 = load i32, i32* %col, align 4
  %conv18 = sext i32 %i12 to i64
  %call19 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call17, i64 %conv18) #11
  %i13 = load i32, i32* %call19, align 4
  %add = add nsw i32 %mul, %i13
  %i14 = load i32, i32* %row, align 4
  %conv20 = sext i32 %i14 to i64
  %call21 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 %conv20) #11
  %i15 = load i32, i32* %col, align 4
  %conv22 = sext i32 %i15 to i64
  %call23 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call21, i64 %conv22) #11
  %i16 = load i32, i32* %call23, align 4
  %mul24 = mul nsw i32 2, %i16
  %i17 = load i32, i32* %row, align 4
  %conv25 = sext i32 %i17 to i64
  %call26 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 %conv25) #11
  %i18 = load i32, i32* %col, align 4
  %conv27 = sext i32 %i18 to i64
  %call28 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call26, i64 %conv27) #11
  %i19 = load i32, i32* %call28, align 4
  %mul29 = mul nsw i32 %mul24, %i19
  %div = sdiv i32 %mul29, 32
  %sub = sub nsw i32 %add, %div
  %sub30 = sub nsw i32 %sub, 32
  store i32 %sub30, i32* %pixel, align 4
  br label %if.end
  %i20 = load i32, i32* %row, align 4
  %conv31 = sext i32 %i20 to i64
  %call32 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 %conv31) #11
  %i21 = load i32, i32* %col, align 4
  %conv33 = sext i32 %i21 to i64
  %call34 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call32, i64 %conv33) #11
  %i22 = load i32, i32* %call34, align 4
  %mul35 = mul nsw i32 2, %i22
  %i23 = load i32, i32* %row, align 4
  %conv36 = sext i32 %i23 to i64
  %call37 = call nonnull align 8 dereferenceable(24) %"class.std::__1::vector.0"* @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm(%"class.std::__1::vector"* %base, i64 %conv36) #11
  %i24 = load i32, i32* %col, align 4
  %conv38 = sext i32 %i24 to i64
  %call39 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm(%"class.std::__1::vector.0"* %call37, i64 %conv38) #11
  %i25 = load i32, i32* %call39, align 4
  %mul40 = mul nsw i32 %mul35, %i25
  %div41 = sdiv i32 %mul40, 32
  store i32 %div41, i32* %pixel, align 4
  br label %if.end
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE9push_backERKi(%"class.std::__1::vector.0"* %row_vec, i32* nonnull align 4 dereferenceable(4) %pixel)
  br label %invoke.cont
  br label %for.inc
  %i26 = load i32, i32* %col, align 4
  %inc = add nsw i32 %i26, 1
  store i32 %inc, i32* %col, align 4
  br label %for.cond4
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE9push_backERKS3_(%"class.std::__1::vector"* %agg.result, %"class.std::__1::vector.0"* nonnull align 8 dereferenceable(24) %row_vec)
  br label %invoke.cont42
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev(%"class.std::__1::vector.0"* %row_vec) #11
  br label %for.inc43
  %i27 = load i32, i32* %row, align 4
  %inc44 = add nsw i32 %i27, 1
  store i32 %inc44, i32* %row, align 4
  br label %for.cond
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEED1Ev(%"class.std::__1::vector"* %agg.result) #11
  br label %nrvo.skipdtor
  ret void
ps: (Implies:Bool (Or:Bool (And:Bool (And:Bool (And:Bool (And:Bool (Not:Bool (Lt:Bool row (matrix_length:Int base))) (Gt:Bool (matrix_length:Int base) (Lit:Int 1))) (Eq:Bool (matrix_length:Int base) (matrix_length:Int active))) (Eq:Bool (list_length:Int (matrix_get:List Int base (Lit:Int 0))) (list_length:Int (matrix_get:List Int active (Lit:Int 0))))) (overlay_blend_8_inv0:Bool active base agg.result row)) (And:Bool (And:Bool (And:Bool (And:Bool (And:Bool (Not:Bool (Lit:Bool True)) (Not:Bool (Lt:Bool row (matrix_length:Int base)))) (Gt:Bool (matrix_length:Int base) (Lit:Int 1))) (Eq:Bool (matrix_length:Int base) (matrix_length:Int active))) (Eq:Bool (list_length:Int (matrix_get:List Int base (Lit:Int 0))) (list_length:Int (matrix_get:List Int active (Lit:Int 0))))) (overlay_blend_8_inv0:Bool active base agg.result row))) (overlay_blend_8_ps:Bool active base agg.result))
Analyze took 1.4592738151550293s
ps call took 8.753758192062378s
------0th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_sub(32, matrix_scalar_div(32, matrix_elemwise_mul(matrix_scalar_mul(2, base), base))),
        lambda x, y: ite(x >= 16, y, x)
    )


Total time to date 10.213032007217407
Passing through parser
Passed parser!
Parser took 9.42748475074768s
Total time taken: 19.640516757965088s
ps call took 4.945403099060059s
------1th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_elemwise_sub(
            matrix_scalar_add(
                32,
                matrix_elemwise_add(
                    matrix_scalar_mul(2, base),
                    base
                )
            ),
            matrix_scalar_div(
                32,
                matrix_elemwise_mul(
                    matrix_scalar_mul(2, base),
                    base
                )
            )
        ),
        lambda x, y: ite(x >= 16, y, matrix_scalar_div(32, matrix_elemwise_mul(matrix_scalar_mul(2, [[x]]), [[x]]))[0][0])
    )


Total time to date 24.585919857025146
Passing through parser
Passed parser!
Parser took 1.5682871341705322s
Total time taken: 26.15420699119568s
ps call took 5.669513940811157s
------2th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_elemwise_add(
            matrix_scalar_mul(2, base),
            matrix_elemwise_sub(
                base,
                matrix_scalar_div(
                    32,
                    matrix_elemwise_mul(
                        matrix_scalar_mul(2, base),
                        base
                    )
                )
            )
        ),
        lambda x, y: ite(
            x >= 16,
            y,
            matrix_scalar_div(
                32,
                matrix_elemwise_mul(
                    matrix_scalar_mul(2, [[x]]),
                    [[x]]
                )
            )[0][0]
        )
    )


Total time to date 31.823720932006836
Passing through parser
Passed parser!
Parser took 1.2140488624572754s
Total time taken: 33.03776979446411s
ps call took 4.922533750534058s
------3th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_where(
            base,
            matrix_scalar_sub(
                32,
                matrix_elemwise_add(
                    matrix_scalar_mul(2, base),
                    matrix_elemwise_sub(
                        base,
                        matrix_scalar_div(
                            32,
                            matrix_elemwise_mul(
                                matrix_scalar_mul(2, base),
                                base
                            )
                        )
                    )
                )
            ),
            matrix_scalar_div(
                32,
                matrix_elemwise_mul(
                    matrix_scalar_mul(2, base),
                    base
                )
            )
        ),
        lambda x, y: x >= 16
    )


Total time to date 37.96030354499817
Passing through parser
Failed to parse the 3th PS solution
Expected type metalift.ir.Fn[typing.Tuple[metalift.ir.Int, metalift.ir.Int, metalift.ir.Int]] but got metalift.ir.List[metalift.ir.List[metalift.ir.Int]] for 2th argument of matrix_where
Parser took 1.033294916152954s
Total time taken: 38.99359846115112s
ps call took 7.515027046203613s
------4th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_where(
            base,
            matrix_elemwise_add(
                matrix_scalar_mul(2, base),
                matrix_elemwise_sub(
                    base,
                    matrix_scalar_div(
                        32,
                        matrix_elemwise_mul(
                            matrix_scalar_mul(2, base),
                            base
                        )
                    )
                )
            ),
            matrix_scalar_div(
                32,
                matrix_elemwise_mul(
                    matrix_scalar_mul(2, base),
                    base
                )
            ),
            lambda x, y: x >= 16
        ),
        lambda x, y: True
    )


Total time to date 46.508625507354736
Passing through parser
Failed to parse the 4th PS solution
Incorrect number of arguments. Required 2 but got 4
Parser took 1.0035336017608643s
Total time taken: 47.5121591091156s
ps call took 4.983341693878174s
------5th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_where(
            base,
            matrix_elemwise_add(
                matrix_scalar_mul(2, base),
                matrix_elemwise_sub(
                    base,
                    matrix_scalar_div(
                        32,
                        matrix_elemwise_mul(
                            matrix_scalar_mul(2, base),
                            base
                        )
                    )
                )
            ),
            matrix_scalar_div(
                32,
                matrix_elemwise_mul(
                    matrix_scalar_mul(2, base),
                    base
                )
            ),
            lambda x, y: x >= 16
        ),
        lambda x, y: True
    )


Total time to date 52.495500802993774
Skipping 5th PS solution because it was already seen
ps call took 6.241121053695679s
------6th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x < 16,
            y,
            reduce_sum(vec_elemwise_sub(
                vec_scalar_mul(2, [x]),
                vec_scalar_div(
                    32,
                    vec_elemwise_mul(
                        vec_scalar_mul(2, [x]),
                        [x]
                    )
                )
            ))
        )
    )


Total time to date 58.73662185668945
Passing through parser
Passed parser!
Parser took 1.0609321594238281s
Total time taken: 59.79755401611328s
ps call took 5.289916038513184s
------7th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_where(
            base,
            matrix_scalar_sub(
                matrix_elemwise_add(
                    matrix_scalar_mul(2, base),
                    base
                ),
                matrix_scalar_div(
                    32,
                    matrix_elemwise_mul(
                        matrix_scalar_mul(2, base),
                        base
                    )
                )
            ),
            matrix_scalar_div(
                32,
                matrix_elemwise_mul(
                    matrix_scalar_mul(2, base),
                    base
                )
            ),
            lambda x, y: x >= 16
        ),
        lambda x, y: True
    )


Total time to date 65.08747005462646
Passing through parser
Failed to parse the 7th PS solution
Incorrect number of arguments. Required 2 but got 4
Parser took 0.970768928527832s
Total time taken: 66.0582389831543s
ps call took 7.019453048706055s
------8th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(vec_elemwise_sub(
                vec_scalar_add(
                    vec_scalar_mul(2, [x]),
                    [x]
                ),
                vec_scalar_div(
                    32,
                    vec_elemwise_mul(
                        vec_scalar_mul(2, [x]),
                        [x]
                    )
                )
            )),
            y
        )
    )


Total time to date 73.07769203186035
Passing through parser
Failed to parse the 8th PS solution
Expected type <class 'metalift.ir.Int'> but got metalift.ir.List[metalift.ir.Int] for 0th argument of vec_scalar_add
Parser took 0.8308899402618408s
Total time taken: 73.90858197212219s
ps call took 8.277950048446655s
------9th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 82.18653202056885
Passing through parser
Failed to parse the 9th PS solution
Expected type <class 'metalift.ir.Int'> but got metalift.ir.List[metalift.ir.Int] for 0th argument of vec_scalar_add
Parser took 0.9649937152862549s
Total time taken: 83.1515257358551s
ps call took 6.296298980712891s
------10th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 89.447824716568
Skipping 10th PS solution because it was already seen
ps call took 5.718353986740112s
------11th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 95.1661787033081
Skipping 11th PS solution because it was already seen
ps call took 5.967343330383301s
------12th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 101.1335220336914
Skipping 12th PS solution because it was already seen
ps call took 6.648811101913452s
------13th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 107.78233313560486
Skipping 13th PS solution because it was already seen
ps call took 5.947555065155029s
------14th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 113.72988820075989
Skipping 14th PS solution because it was already seen
ps call took 5.930649042129517s
------15th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 119.6605372428894
Skipping 15th PS solution because it was already seen
ps call took 6.085808753967285s
------16th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 125.74634599685669
Skipping 16th PS solution because it was already seen
ps call took 6.473031282424927s
------17th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 132.21937727928162
Skipping 17th PS solution because it was already seen
ps call took 6.592016935348511s
------18th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 138.81139421463013
Skipping 18th PS solution because it was already seen
ps call took 5.11438512802124s
------19th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 143.92577934265137
Skipping 19th PS solution because it was already seen
ps call took 5.667687892913818s
------20th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 149.59346723556519
Skipping 20th PS solution because it was already seen
ps call took 5.489780902862549s
------21th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 155.08324813842773
Skipping 21th PS solution because it was already seen
ps call took 5.419677972793579s
------22th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 160.5029261112213
Skipping 22th PS solution because it was already seen
ps call took 6.14557409286499s
------23th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 166.6485002040863
Skipping 23th PS solution because it was already seen
ps call took 5.936241865158081s
------24th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 172.58474206924438
Skipping 24th PS solution because it was already seen
ps call took 6.350543022155762s
------25th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 178.93528509140015
Skipping 25th PS solution because it was already seen
ps call took 7.241827964782715s
------26th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 186.17711305618286
Skipping 26th PS solution because it was already seen
ps call took 6.538475036621094s
------27th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 192.71558809280396
Skipping 27th PS solution because it was already seen
ps call took 5.8925461769104s
------28th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 198.60813426971436
Skipping 28th PS solution because it was already seen
ps call took 6.357663154602051s
------29th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 204.9657974243164
Skipping 29th PS solution because it was already seen
ps call took 5.632765054702759s
------30th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 210.59856247901917
Skipping 30th PS solution because it was already seen
ps call took 6.535813808441162s
------31th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 217.13437628746033
Skipping 31th PS solution because it was already seen
ps call took 6.229460954666138s
------32th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 223.36383724212646
Skipping 32th PS solution because it was already seen
ps call took 6.986501932144165s
------33th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 230.35033917427063
Skipping 33th PS solution because it was already seen
ps call took 5.326227188110352s
------34th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 235.67656636238098
Skipping 34th PS solution because it was already seen
ps call took 6.733155965805054s
------35th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 242.40972232818604
Skipping 35th PS solution because it was already seen
ps call took 6.126368999481201s
------36th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 248.53609132766724
Skipping 36th PS solution because it was already seen
ps call took 5.908673048019409s
------37th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 254.44476437568665
Skipping 37th PS solution because it was already seen
ps call took 6.186481952667236s
------38th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 260.6312463283539
Skipping 38th PS solution because it was already seen
ps call took 5.675929069519043s
------39th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 266.3071753978729
Skipping 39th PS solution because it was already seen
ps call took 5.321889162063599s
------40th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 271.6290645599365
Skipping 40th PS solution because it was already seen
ps call took 5.88836669921875s
------41th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 277.5174312591553
Skipping 41th PS solution because it was already seen
ps call took 5.822398900985718s
------42th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 283.339830160141
Skipping 42th PS solution because it was already seen
ps call took 5.787081003189087s
------43th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 289.1269111633301
Skipping 43th PS solution because it was already seen
ps call took 5.955740213394165s
------44th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 295.08265137672424
Skipping 44th PS solution because it was already seen
ps call took 7.0633251667022705s
------45th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(
                matrix_scalar_mul(2, base),
                base
            )
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(
                vec_elemwise_sub(
                    vec_scalar_add(
                        vec_scalar_mul(2, [x]),
                        [x]
                    ),
                    vec_scalar_div(
                        32,
                        vec_elemwise_mul(
                            vec_scalar_mul(2, [x]),
                            [x]
                        )
                    )
                )
            ),
            y
        )
    )


Total time to date 302.1459765434265
Skipping 45th PS solution because it was already seen
ps call took 8.121050119400024s
------46th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(matrix_scalar_mul(2, base), base)
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(vec_elemwise_sub(
                vec_scalar_add(vec_scalar_mul(2, [x]), [x]),
                vec_scalar_div(
                    32,
                    vec_elemwise_mul(vec_scalar_mul(2, [x]), [x])
                )
            )),
            y
        )
    )


Total time to date 310.26702666282654
Passing through parser
Failed to parse the 46th PS solution
Expected type <class 'metalift.ir.Int'> but got metalift.ir.List[metalift.ir.Int] for 0th argument of vec_scalar_add
Parser took 1.0751798152923584s
Total time taken: 311.3422064781189s
ps call took 6.971205949783325s
------47th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(matrix_scalar_mul(2, base), base)
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(vec_elemwise_sub(
                vec_scalar_add(vec_scalar_mul(2, [x]), [x]),
                vec_scalar_div(
                    32,
                    vec_elemwise_mul(vec_scalar_mul(2, [x]), [x])
                )
            )) - 32,
            y
        )
    )


Total time to date 318.3134124279022
Passing through parser
Failed to parse the 47th PS solution
Expected type <class 'metalift.ir.Int'> but got metalift.ir.List[metalift.ir.Int] for 0th argument of vec_scalar_add
Parser took 0.8338751792907715s
Total time taken: 319.147287607193s
ps call took 8.234985113143921s
------48th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(matrix_scalar_mul(2, base), base)
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(vec_elemwise_sub(
                vec_scalar_add(vec_scalar_mul(2, [x]), [x]),
                vec_scalar_div(
                    32,
                    vec_elemwise_mul(vec_scalar_mul(2, [x]), [x])
                )
            )) - 32,
            y
        )
    )


Total time to date 327.3822727203369
Skipping 48th PS solution because it was already seen
ps call took 6.825963973999023s
------49th PS solution---------

def overlay_blend_8(base: List[List[int]], active: List[List[int]]) -> List[List[int]]:
    return matrix_where(
        base,
        matrix_scalar_div(
            32,
            matrix_elemwise_mul(matrix_scalar_mul(2, base), base)
        ),
        lambda x, y: ite(
            x >= 16,
            reduce_sum(vec_elemwise_sub(
                vec_scalar_add(vec_scalar_mul(2, [x]), [x]),
                vec_scalar_div(
                    32,
                    vec_elemwise_mul(vec_scalar_mul(2, [x]), [x])
                )
            )) - 32,
            y
        )
    )


Total time to date 334.20823669433594
Skipping 49th PS solution because it was already seen
