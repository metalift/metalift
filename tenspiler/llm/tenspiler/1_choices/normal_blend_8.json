[
    "Here is the rewritten version of `normal_blend_8` function using given Python functions. The \"base\", \"active\" and \"opacity\" as inputs to C++ function will be inputs to Python function instead. Here is how you can write this:\n\n```python\ndef normal_blend_8(base, active, opacity):\n    normal_blend_8_rv = vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul((255 - opacity), base))\n    return normal_blend_8_rv\n```\n\nThis Python function `normal_blend_8` does the same operations and achieves the same result as the given C++ function. This function multiplies vector \"active\" by input scalar \"opacity\", and vector \"base\" is multiplied by the scalar (255 - opacity). Then, these two vectors are added together elementwise to create the output \"normal_blend_8_rv\". Just like the C++ function, it applies these operations to each element in the \"active\" and \"base\" vectors and returns the results in the resulting Python list."
]
