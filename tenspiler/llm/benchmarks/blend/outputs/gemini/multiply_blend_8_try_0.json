[
    "```\n//test function\n#include <vector>\n#include <cstdint>\nusing namespace std;\n\nvector<vector<uint8_t>> multiply_blend_8(vector<vector<uint8_t>> base, vector<vector<uint8_t>> active)\n{\n    vector<vector<uint8_t>> out;\n    uint8_t m = base.size();\n    uint8_t n = base[0].size();\n    for (uint8_t row = 0; row < m; row++) {\n        vector<uint8_t> row_vec;\n        for (uint8_t col = 0; col < n; col++) {\n            uint8_t pixel = reduce_max(matrix_selection_two_args(base, active, vec_elemwise_mul));\n            pixel = reduce_sum(vec_elemwise_div(pixel, vec_map(vec_scalar_add(32, [0]), vec_elemwise_add(base, active))));\n            pixel = reduce_sum(vec_elemwise_mul(pixel, vec_scalar_add(32, active)));\n            row_vec.push_back(pixel);\n        }\n        out.push_back(row_vec);\n    }\n    return out;\n}\n\n```"
]
