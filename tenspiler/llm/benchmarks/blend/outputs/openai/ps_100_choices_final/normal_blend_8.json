[
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\nfrom typing import List\n\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\n#rewritten function\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul((255 - opacity), base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\n#rewritten function in Python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\n#rewritten function in Python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\n#Python equivalent function (rewritten using provided functions)\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\n# rewritten function\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul((255 - opacity), base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(\n               vec_scalar_mul(opacity, active), \n               vec_scalar_mul(255 - opacity, base)\n           )\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```",
    "```python\ndef normal_blend_8(base: List[int], active: List[int], opacity: int) -> List[int]:\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(255 - opacity, base))\n```"
]
