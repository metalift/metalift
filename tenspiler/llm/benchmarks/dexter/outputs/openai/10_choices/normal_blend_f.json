[
    "#rewritten function\n```python\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(1 - opacity, base))\n```",
    "#rewritten function\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul((1 - opacity), base))",
    "#rewritten function\n```python\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(1 - opacity, base))\n```",
    "#rewritten function\n```\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul((1 - opacity), base))\n```",
    "#rewritten function\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul((1 - opacity), base))",
    "#rewritten function\n```\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(1 - opacity, base))\n```",
    "#rewritten function\n```\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(1 - opacity, base))\n```",
    "#rewritten function\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul(1 - opacity, base))",
    "#rewritten function\n```python\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(\n        vec_scalar_mul(opacity, active),\n        vec_scalar_mul(1 - opacity, base)\n    )\n```",
    "#rewritten function\ndef normal_blend_f(base, active, opacity):\n    return vec_elemwise_add(vec_scalar_mul(opacity, active), vec_scalar_mul((1 - opacity), base))"
]
