[
    "#rewritten function\n```\ndef lighten_blend_8(base, active):\n    return matrix_selection_two_args(base, active, max)\n```",
    "#rewritten function\n```python\ndef lighten_blend_8(base, active):\n    return matrix_selection_two_args(base, active, max)\n```",
    "#rewritten function\ndef lighten_blend_8(base, active):\n    return matrix_selection_two_args(base, active, max)",
    "#rewritten function\n```\ndef lighten_blend_8(base, active):\n    return matrix_selection_two_args(base, active, max)\n```",
    "#rewritten function\nThe equivalent python function is\n\n```python\ndef lighten_blend_8(base, active):\n    return matrix_selection_two_args(base, active, max)\n```",
    "#rewritten function\n```python\ndef lighten_blend_8(base, active):\n    return matrix_selection_two_args(base, active, max)\n```",
    "#rewritten function\n\n```python\ndef lighten_blend_8(base, active):\n    return matrix_selection_two_args(base, active, max)\n```",
    "#rewritten function\ndef lighten_blend_8 (base, active):\n    return matrix_selection_two_args(active, base, max)",
    "#rewritten function\n```\ndef greater_than(a, b):\n    return a if a > b else b\n\ndef lighten_blend_8(base, active):\n    return matrix_selection_two_args(base, active, greater_than)\n```",
    "#rewritten function\n```\ndef lighten_blend_8(base, active):\n    return matrix_selection_two_args(base, active, max)\n```"
]
