["\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(vec_slice(output, 0, max_pos))\n", "\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(vec_slice(output, 0, max_pos))\n", "\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(vec_slice(output, 0, max_pos))\n", "\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(output[:max_pos])\n", "\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(vec_slice(output, 0, max_pos))\n", "\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(vec_slice(output, 0, max_pos))\n", "\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(vec_slice(output, 0, max_pos))\n", "\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(vec_slice(output, 0, max_pos))\n", "\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(vec_slice(output, 0, max_pos))\n", "\ndef softmax_part3(output: List[int], max_pos: int) -> int:\n    return reduce_sum(vec_slice(output, 0, max_pos))\n"]