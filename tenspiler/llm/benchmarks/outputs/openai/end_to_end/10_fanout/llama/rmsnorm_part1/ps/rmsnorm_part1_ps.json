["\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_elemwise_mul(input, input))\n", "\ndef rmsnorm_part1(input: List[int]) -> int:\n    return reduce_sum(vec_elemwise_mul(input, input))\n", "\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_elemwise_mul(input, input))\n", "\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_elemwise_mul(input, input))\n", "\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_elemwise_mul(input, input))\n", "\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_elemwise_mul(input, input))\n", "\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_map(input, lambda x: x ** 2))\n\n\n\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_map(input, int.__pow__))\n", "\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_elemwise_mul(input, input))\n", "\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_elemwise_mul(input, input))\n", "\ndef rmsnorm_part1(input: List[int], weight: List[int]) -> int:\n    return reduce_sum(vec_elemwise_mul(input, input))\n"]