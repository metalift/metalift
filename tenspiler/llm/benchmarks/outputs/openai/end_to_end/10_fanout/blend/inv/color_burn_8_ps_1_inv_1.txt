
from typing import List

def invariant1(active: List[List[int]], base: List[List[int]], out: List[List[int]], row: int) -> bool:
    return row >= 0 and row <= len(base) and out == matrix_selection_two_args(matrix_scalar_add(255, matrix_elemwise_div(matrix_scalar_sub(255, base[:row]), active[:row])), matrix_scalar_mul(255, matrix_elemwise_mul(active[:row], active[:row])), lambda x, y: ite(y != 0, x, y))

def invariant2(active: List[List[int]], base: List[List[int]], out: List[List[int]], col: int, row: int) -> bool:
    return col >= 0 and col <= len(base[0]) and row >= 0 and row <= len(base) and out[row][:col] == selection_two_args(vec_scalar_add(255, vec_elemwise_div(vec_scalar_sub(255, base[row][:col]), active[row][:col])), vec_scalar_mul(255, vec_elemwise_mul(active[row][:col], active[row][:col])), lambda x, y: ite(y != 0, x, y))
