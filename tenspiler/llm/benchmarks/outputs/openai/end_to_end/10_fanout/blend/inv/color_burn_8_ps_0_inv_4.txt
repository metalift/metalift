
from typing import List, Callable

def invariant1(active: List[List[int]], base: List[List[int]], out: List[List[int]], pixel: int, row: int) -> bool:
    return row >= 0 and row <= len(base) and len(out) == row and pixel == 0

def invariant2(active: List[List[int]], base: List[List[int]], out: List[List[int]], col: int, pixel: int, row: int) -> bool:
    return col >= 0 and col <= len(base[0]) and row >= 0 and row < len(base) and len(out[row]) == col and pixel == (255 if active[row][col] == 0 else 255 - (255 - base[row][col]) / active[row][col])
