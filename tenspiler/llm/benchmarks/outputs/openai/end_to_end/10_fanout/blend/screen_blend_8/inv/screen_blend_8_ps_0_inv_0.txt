
from typing import List

def invariant1(base: List[List[int]], active: List[List[int]], out: List[List[int]], row: int) -> bool:
    return row >= 0 and row <= len(base) and out == matrix_elemwise_add(matrix_elemwise_sub(base[:row], matrix_scalar_div(32, matrix_elemwise_mul(base[:row], active[:row]))), active[:row])

def invariant2(base: List[List[int]], active: List[List[int]], col: int, out: List[List[int]], row: int, row_vec: List[int]) -> bool:
    return col >= 0 and col <= len(base[0]) and row >= 0 and row <= len(base) and out == matrix_elemwise_add(matrix_elemwise_sub(base[:row], matrix_scalar_div(32, matrix_elemwise_mul(base[:row], active[:row]))), active[:row]) and row_vec == vec_elemwise_add(vec_elemwise_sub(base[row][:col], vec_scalar_div(32, vec_elemwise_mul(base[row][:col], active[row][:col]))), active[row][:col])
