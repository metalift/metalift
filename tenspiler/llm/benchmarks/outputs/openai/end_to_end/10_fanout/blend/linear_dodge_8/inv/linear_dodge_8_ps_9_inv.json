["\ndef invariant1(base: List[List[int]], active: List[List[int]], out: List[List[int]], row: int) -> bool:\n    return row >= 0 and row <= len(base) and out == ([] if row == 0 else [vec_elemwise_add(base[i], active[i]) for i in range(row)])\n\ndef invariant2(base: List[List[int]], active: List[List[int]], out: List[List[int]], row: int, row_vec: List[int], col: int) -> bool:\n    return row >= 0 and row < len(base) and col >= 0 and col <= len(base[0]) and row_vec == ([] if col == 0 else [base[row][i] + active[row][i] for i in range(col)]) and out == ([] if row == 0 else [vec_elemwise_add(base[i], active[i]) for i in range(row)])\n"]
