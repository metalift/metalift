
    from typing import List

    def invariant1(active: List[List[int]], base: List[List[int]], out: List[List[int]], row: int) -> bool:
        return row >= 0 and row <= len(active) and out == matrix_selection_two_args(base[:row], active[:row], lambda b, a: ite(a == 0, 255, 255 - (255 - b) // a))

    def invariant2(active: List[List[int]], base: List[List[int]], col: int, out: List[List[int]], row: int, row_vec: List[int]) -> bool:
        return col >= 0 and col <= len(active[0]) and row >= 0 and row <= len(active) and out == matrix_selection_two_args(base[:row], active[:row], lambda b, a: ite(a == 0, 255, 255 - (255 - b) // a)) and row_vec == selection_two_args(base[row][:col], active[row][:col], lambda b, a: ite(a == 0, 255, 255 - (255 - b) // a))
