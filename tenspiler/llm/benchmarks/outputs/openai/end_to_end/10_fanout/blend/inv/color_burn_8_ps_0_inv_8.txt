
def invariant1(active: List[List[int]], base: List[List[int]], out: List[List[int]], pixel: int, row: int) -> bool:
    return row >= 0 and row <= len(base) and out == matrix_selection_two_args( matrix_scalar_add(255, matrix_elemwise_div(matrix_scalar_sub(255, base[:row]), active[:row])), scalar_matrix_div(255, active[:row]), lambda x, y: ite(y == 0, 255, x) )

def invariant2(active: List[List[int]], base: List[List[int]], col: int, pixel: int, row: int) -> bool:
    return col >= 0 and col <= len(base[row]) and row >= 0 and row < len(base) and pixel == ite(active[row][col] == 0, 255, 255 - (255 - base[row][col]) / active[row][col])
