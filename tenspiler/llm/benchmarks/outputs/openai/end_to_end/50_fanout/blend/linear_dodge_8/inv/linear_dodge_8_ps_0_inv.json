["\nfrom typing import List\n\ndef invariant1(active: List[List[int]], base: List[List[int]], out: List[List[int]], row: int) -> bool:\n    return 0 <= row < len(out) and out[:row] == matrix_elemwise_add(base[:row], active[:row])\n\ndef invariant2(active: List[List[int]], base: List[List[int]], col: int, out: List[List[int]], row: int, row_vec: List[int]) -> bool:\n    return 0 <= row < len(out) and 0 <= col < len(out[row]) and row_vec[:col] == vec_elemwise_add(col_vec(base, col), col_vec(active, col)) and out[:row] == matrix_elemwise_add(base[:row], active[:row])\n"]
