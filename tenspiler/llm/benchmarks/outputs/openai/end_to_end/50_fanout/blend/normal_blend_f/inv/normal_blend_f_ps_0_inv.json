["\ndef invariant(base: List[int], active: List[int], opacity: int, i: int, out: List[int]) -> bool:\n    return (\n        i >= 0 and\n        i <= len(base) and\n        len(base) == len(active) and\n        out == vec_elemwise_add(\n            vec_scalar_mul(opacity, vec_slice(active, 0, i)),\n            vec_scalar_mul(1 - opacity, vec_slice(base, 0, i))\n        )\n    )\n\n\n\nout == vec_elemwise_add(\n    vec_scalar_mul(opacity, active),\n    vec_scalar_mul(1 - opacity, base)\n)\n"]
