["\ndef invariant1(row: int, base: List[List[int]], active: List[List[int]], out: List[List[int]]) -> bool:\n    return 0 <= row <= len(base) and out == matrix_where(matrix_row_slice(base, 0, row), matrix_row_slice(active, 0, row), lambda x, y: x if x < y else y)\n\n\n\ndef invariant2(row: int, col: int, base: List[List[int]], active: List[List[int]], out: List[List[int]]) -> bool:\n    return 0 <= row < len(base) and 0 <= col <= len(base[0]) and out[row] == vector_where(base[row][:col], active[row][:col], lambda x, y: x if x < y else y)\n"]
