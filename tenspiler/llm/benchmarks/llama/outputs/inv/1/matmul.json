[
    "Note: In the following invariants, the \"op\" stands for a comparison operator like \"<\", \">\", \"<=\", \">=\", \"==\", and \"!=\".\n\nHere are the loop invariants for the matmul function:\n\n```python\ndef invariant1(weight: List[List[int]], input: List[int], output: List[int], m: int, n: int, row: int, curr: int):\n    return row >= 0 and row <= m and curr == reduce_sum(vec_elemwise_mul(weight[row], input[:row]))\n\ndef invariant2(weight: List[List[int]], input: List[int], output: List[int], m: int, n: int, row: int, col: int):\n    return col >= 0 and col <= n and output[row] == reduce_sum(vec_elemwise_mul(weight[row], input[:col]))\n```\n\nExplanation:\n\n1. In the first loop, invariant1 checks that the row index is within the valid range and that the current value matches the sum of element-wise multiplication of the weight row and input up to the current row.\n\n2. In the second loop, invariant2 checks that the column index is within the valid range and that the output at the current row matches the sum of element-wise multiplication of the weight row and input up to the current column."
]
