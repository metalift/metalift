{
    "softmax_part1": "reduce_max(list_slice(input, 0, max_pos))",
    "softmax_part2": "vec_map(vec_scalar_sub(max_val, list_slice(input, 0, max_pos)), lambda x: integer_exp(x))",
    "softmax_part3": "reduce_sum(list_slice(output, 0, max_pos))",
    "softmax_part4": "vec_scalar_div(sum, list_slice(unnormalized_output, 0, max_pos))",
    "rmsnorm_part1": "reduce_sum(vec_elemwise_mul(input, input))",
    "rmsnorm_part2": "vec_scalar_mul((1 // integer_sqrt(((ss // list_length(input)) + 1))), vec_elemwise_mul(input, weight))",
    "matmul": "matrix_vec_mul(weight, input)",
    "transformer_part1": "vec_scalar_div(integer_sqrt(head_size * 1), vec_scalar_div(integer_sqrt(head_size * 1),matrix_vec_mul(matrix_col_slice(list_slice(key_cache_layer, 0, token_position),head * head_size, head * head_size + head_size), vec_slice(q, head * head_size, head * head_size + head_size))))",
    "transformer_part2": "matrix_vec_mul(matrix_transpose(matrix_col_slice(list_slice(key_cache_layer, token_position + 1), head * head_size, head * head_size + head_size)), list_slice(attention, 0, token_position + 1))",
    "transformer_part3": "vec_elemwise_mul(list_slice(input, 0, hidden_dim),scalar_vec_div(1,vec_scalar_add(1,vec_map(scalar_vec_sub(0,list_slice(input, 0, hidden_dim)),lambda x: integer_exp(x)))))",
    "transformer_part4": "vec_elemwise_mul(list_slice(input2, 0, hidden_dim), list_slice(input1, 0, hidden_dim))"
}
